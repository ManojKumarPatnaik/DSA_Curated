Brute Force Approach:
1) You run nested for loop and for all a[i] > a[j] do count++

TC - O(N^2)

Optimal Approach:
1) We increment count everytime we call mergeSort and merge 

int merge(int arr[], int temp[], int left, int mid, int right){
    int i,j,k;
    int inv_count = 0;
    i=left;
    j=mid;
    k=0;

    while((i<=mid-1) && (j<=right)){
        if(arr[i] <= arr[j]){
            temp[k++] = arr[i++];
        } else {
            temp[k++] = arr[j++];
            inv_count = inv_count + (mid-i);
        }
    }

        while(i<=mid-1){
        temp[k++] = arr[i++];
    }

    while(j<=right){
        temp[k++] = arr[j++];
    }

    for(int i=left; i< right; i++){
        arr[i] = temp[i];
    }

    return inv_count;

}

int mergeSort(int arr[], int temp[], int left, int right){
    int mid, inv_count =0;

    mid = (left + right)/2;

    if(left < right){
        inv_count += mergeSort(arr, temp, left, mid);
        inv_count += mergeSort(arr, temp, mid+1, right);

        inv_count += merge(arr, temp, left, mid+1, right);
    }
    return inv_count;
}