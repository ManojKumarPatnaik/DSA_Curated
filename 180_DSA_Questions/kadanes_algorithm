Brute force Approach:

1) Iterate over all the subarrays using i->(0,n-1),j->(0,n-1),k->(i,j) and store the value in maxSum
T.C = O(N^3)

Better Approach:

1) Iterate over all the subarrays using i,j and store the value in maxSum
for(int i=0; i<n; i++){
    sum=0;
    for(int j=0; j<n; j++){
        sum +=a[j];
    }
}
T.C = O(N^2)

Optimal Approach:
1) we first take sum=0 and max = a[0];
TC= O(N)
SC=O(1)

class Solution{
    public int maxSubArray(int[] nums){
        int sum = 0;
        int max = nums[0];

        for(int element: nums){
            sum = sum+element;
            if(sum > max) max = sum;
            if(sum < 0) sum = 0
        }

        return max;
    }
}