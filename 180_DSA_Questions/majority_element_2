Brute Force Approach:
1) Pick one element and check how many times it appears in the array
2) if it appears more than N/3 times then that is one of the ans

HashMap Approach:
Same as previous majority element
TC - O(NlogN);
SC - O(N)

Optimal Approach:
The basic idea is same as the previous question 
Only difference is after getting the majority element we check again to verify since we need to satisfy the N/3 condition
Here we take num1, num2, count1, count2.

From this step we will get two elements
for(int el:nums){
    if(el == num1){
        count1++;
    } else if(el == num2){
        count2++;
    } else if(count1 == 0){
        num1 = el;
        count1 = 1;
    } else if(count2 == 0){
        num2 = el;
        count2 = 1;
    } else {
        count1--;
        count2--;
    }
}

//Vertification step
//We get the count of both num1 and num2 from the array and do N/3 to check if the count is greater than that

List<Integer> ans = new ArrayList<Integer>();
count1 = 0;
count2 = 0;

for(int i=0; i<nums.length; i++){
    if(nums[i] == num1){
        count1++;
    } else if(nums[i] == num2){
        count2++;
    }
}
if(count1 > nums.length/3) ans.add(num1);
if(count2 > nums.length/3) ans.add(num2);

return ans;
