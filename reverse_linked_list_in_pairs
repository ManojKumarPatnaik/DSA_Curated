//1->2->3->4->5->6->7->8
/*
this loop reverse two nodes at a time i.e it will first reverse 1->2 to 2->1 
then it will reverse 2->3 to 3->2 hence we run it k-1 times
            for(int i=1; i<k;i++){
                cur.next = nex.next;
                nex.next = pre.next;
                pre.next = nex;
                nex = cur.next;
            }
*/
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        if(head == null || k==1) return head;

        ListNode dummy = new ListNode(0);
        dummy.next = head;

        ListNode pre = dummy;
        ListNode cur = dummy;
        ListNode nex = dummy;

        int count = 0;
        while(cur.next != null){
            cur = cur.next;
            count++;
        }

        while(count >= k){
            cur = pre.next;
            nex = cur.next;

            for(int i=1; i<k; i++){
                cur.next = nex.next;
                nex.next = pre.next;
                pre.next = nex;
                nex = cur.next;
            }
            pre = cur;
            count -=k;
        }
        return dummy.next;
    }
}
